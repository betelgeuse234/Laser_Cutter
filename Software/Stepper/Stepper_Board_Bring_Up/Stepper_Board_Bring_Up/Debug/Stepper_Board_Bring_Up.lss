
Stepper_Board_Bring_Up.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000014c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000001c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000866  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000071e  00000000  00000000  00000ade  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002dc  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000088  00000000  00000000  000014d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000415  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000049  00000000  00000000  00001975  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000019be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e4       	ldi	r30, 0x4C	; 76
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 30       	cpi	r26, 0x02	; 2
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9b 00 	call	0x136	; 0x136 <main>
  9e:	0c 94 a4 00 	jmp	0x148	; 0x148 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_11>:

unsigned int count;

//his is an interrupt that is triggered from output compare A on timer 0
ISR(TIMER1_COMPA_vect)
{	
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
	count++;
  b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
  b8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
  c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
	if(OCR0A > 25)
  c6:	87 b5       	in	r24, 0x27	; 39
  c8:	8a 31       	cpi	r24, 0x1A	; 26
  ca:	38 f0       	brcs	.+14     	; 0xda <__vector_11+0x34>
	{
		PORTB ^= _BV(0);
  cc:	95 b1       	in	r25, 0x05	; 5
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	89 27       	eor	r24, r25
  d2:	85 b9       	out	0x05, r24	; 5
		OCR0A = OCR0A - 5;									//Frequency of PWM = 2 * OCR1A/(16000000/PRESCALAR)		
  d4:	87 b5       	in	r24, 0x27	; 39
  d6:	85 50       	subi	r24, 0x05	; 5
  d8:	87 bd       	out	0x27, r24	; 39
	}
}
  da:	9f 91       	pop	r25
  dc:	8f 91       	pop	r24
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <velocity_timer_init>:
 *Output: N/a
 */
void velocity_timer_init(void)
{
     
	TCCR0A = _BV(COM0A0) | _BV(WGM00); //Set WGM to mode 11
  e8:	81 e4       	ldi	r24, 0x41	; 65
  ea:	84 bd       	out	0x24, r24	; 36
	TCCR0B = _BV(WGM02) | _BV(CS02) | _BV(CS00);    //Prescaler of 1024
  ec:	8d e0       	ldi	r24, 0x0D	; 13
  ee:	85 bd       	out	0x25, r24	; 37
    OCR0A = 255;									//Frequency of PWM = 2 * OCR1A/(16000000/PRESCALAR)
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	87 bd       	out	0x27, r24	; 39
	TCNT0 = 0; 
  f4:	16 bc       	out	0x26, r1	; 38
  f6:	08 95       	ret

000000f8 <accel_timer_init>:
 *Output: N/a
 */
void accel_timer_init(void)
{
     
	TCCR1A = _BV(WGM12); //Set WGM to mode 11
  f8:	88 e0       	ldi	r24, 0x08	; 8
  fa:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = _BV(CS12) | _BV(CS10);    //Prescaler of 1024
  fe:	85 e0       	ldi	r24, 0x05	; 5
 100:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    OCR1A = 32000;									//Frequency of PWM = 2 * OCR1A/(16000000/PRESCALAR)
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	9d e7       	ldi	r25, 0x7D	; 125
 108:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 10c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCNT1 = 0; 
 110:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 114:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TIMSK1 = _BV(OCIE1A);           //Enable timer interrupts
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 11e:	08 95       	ret

00000120 <system_init>:
}

void system_init(void)
{
	/* Initialize GPIO */
	DDRB = _BV(5) | _BV(1) | _BV(0);	// PB2 and PB5 outputs
 120:	83 e2       	ldi	r24, 0x23	; 35
 122:	84 b9       	out	0x04, r24	; 4
	PORTB = _BV(5) | _BV(0);			// Set PB5 high
 124:	81 e2       	ldi	r24, 0x21	; 33
 126:	85 b9       	out	0x05, r24	; 5
	DDRD = _BV(6);
 128:	80 e4       	ldi	r24, 0x40	; 64
 12a:	8a b9       	out	0x0a, r24	; 10
	
	//usart_setup();
	
	// Setup Timer to operate PWM
	accel_timer_init();
 12c:	0e 94 7c 00 	call	0xf8	; 0xf8 <accel_timer_init>
	velocity_timer_init();
 130:	0e 94 74 00 	call	0xe8	; 0xe8 <velocity_timer_init>
 134:	08 95       	ret

00000136 <main>:
	}
}

int main(void)
{
	cli();
 136:	f8 94       	cli
	count = 0;
 138:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_end+0x1>
 13c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
	system_init();
 140:	0e 94 90 00 	call	0x120	; 0x120 <system_init>
	sei();
 144:	78 94       	sei
  
	while(1)
	{
//		printf("%d", count);
	}
 146:	ff cf       	rjmp	.-2      	; 0x146 <main+0x10>

00000148 <_exit>:
 148:	f8 94       	cli

0000014a <__stop_program>:
 14a:	ff cf       	rjmp	.-2      	; 0x14a <__stop_program>
